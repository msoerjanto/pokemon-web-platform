{"version":3,"sources":["Context.js","components/PageControl.js","components/PokeCard.js","components/PokemonCardContainer.js","withContext.js","components/PokeOwned.js","graphql/queries/getPokemons.js","pages/PokemonListPage.js","pages/MyPokemonsPage.js","components/NavBarLink.js","components/NavBar.js","components/CatchPokeDialog.js","graphql/queries/getPokemon.js","pages/PokemonDetailsPage.js","App.js","reportWebVitals.js","apollo/client.js","index.js"],"names":["Context","React","createContext","caught","PreviousButton","props","prev","next","onClick","onPrev","NextButton","onNext","PageControl","PokeCard","styled","div","PokeCardName","strong","PokeCardComponent","owned","className","src","image","name","release","to","style","textDecoration","PokemonCardContainer","withContext","Wrapped","Consumer","context","PokeOwned","PokeOwnedComponent","length","GET_POKEMONS_QUERY","gql","useQuery","variables","limit","offset","loading","error","data","refetch","message","console","log","pokecaught","pokemons","results","map","pokemon","prevOffset","nextOffset","nickname","releasePokemon","NavBarLink","li","NavBarLinkComponent","description","links","NavBar","link","CatchPokeButton","button","PokemonCaughtDialog","CatchPokeDialogComponent","useState","setNickname","catchingPokemon","pokemonCaught","onSubmit","event","preventDefault","submitPokemon","sprites","front_default","class","type","value","onChange","e","target","placeholder","catchPokemon","GET_POKEMON_QUERY","gqlVariables","useParams","setCatchingPokemon","setPokemonCaught","load","setLoad","width","CatchPokeDialog","Math","random","setTimeout","App","state","push","localStorage","setItem","JSON","stringify","setState","filtered","filter","poke","routerRef","createRef","getItem","parse","this","Provider","ref","exact","path","component","PokemonListPage","MyPokemonsPage","PokemonDetailsPage","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","apolloClient","ApolloClient","uri","cache","InMemoryCache","client","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.d5fbdde9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Context = React.createContext({\r\n    caught: []\r\n});\r\n\r\nexport default Context;","import React from \"react\";\r\n\r\nfunction PreviousButton(props) {\r\n    // need to make limit global\r\n    if (!props.prev && props.next === 45) {\r\n        return <></>;\r\n    }\r\n    return <>\r\n        <button onClick={() => props.onPrev(props.prev)}>Previous</button>\r\n    </>;\r\n}\r\n\r\nfunction NextButton(props) {\r\n    if (!props.next) {\r\n        return <></>;\r\n    }\r\n    return <>\r\n        <button onClick={() => props.onNext(props.next)}>Next</button>\r\n    </>;\r\n}\r\n\r\nexport default function PageControl(props) {\r\n    return (\r\n        <div>\r\n            <PreviousButton next={props.next} prev={props.prev} onPrev={props.onPrev}/>\r\n            <NextButton next={props.next} onNext={props.onNext} />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport styled from '@emotion/styled'\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\n\r\n\r\nconst PokeCard = styled.div`\r\n\r\n    padding: 8px\r\n`;\r\n\r\nconst PokeCardName = styled.strong`\r\n    text-align: center;\r\n`\r\n\r\nexport default function PokeCardComponent(props) {\r\n    if (props.owned) {\r\n        return (\r\n            <PokeCard className=\"d-flex flex-column\">\r\n                <img src={props.image} />\r\n                <PokeCardName>\r\n                    {props.name}\r\n                </PokeCardName>\r\n                <button className=\"btn btn-primary\" onClick={() => props.release(props.name)}>\r\n                    Release\r\n                </button>\r\n            </PokeCard>\r\n        );\r\n    }\r\n    return (\r\n\r\n        <Link to={`pokemons/${props.name}`} style={{ textDecoration: 'none' }}>\r\n            <PokeCard className=\"d-flex flex-column\">\r\n                <img src={props.image} />\r\n                <PokeCardName>\r\n                    {props.name}\r\n                </PokeCardName>\r\n            </PokeCard>\r\n        </Link >\r\n\r\n    );\r\n}\r\n\r\n","import styled from '@emotion/styled'\r\n\r\nconst PokemonCardContainer = styled.div`\r\n\r\n`;\r\n\r\nexport default PokemonCardContainer;","import React from 'react';\r\nimport Context from './Context';\r\n\r\nconst withContext = Wrapped => {\r\n    return props => {\r\n        return (\r\n            <Context.Consumer>\r\n                {context => <Wrapped {...props} context={context} />}\r\n            </Context.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withContext;","import React from \"react\";\r\nimport withContext from \"../withContext\";\r\nimport styled from '@emotion/styled'\r\n\r\nconst PokeOwned = styled.div`\r\n\r\n`;\r\n\r\nexport default function PokeOwnedComponent(props) {\r\n    return (\r\n        <PokeOwned className=\"d-flex flex-column align-items-center\">\r\n            <h1>{props.caught.length}</h1>\r\n            <h2>Owned</h2>\r\n        </PokeOwned>\r\n    );\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_POKEMONS_QUERY = gql`\r\n    query pokemons($limit: Int, $offset: Int) {\r\n        pokemons(limit: $limit, offset: $offset) {\r\n        count\r\n        next\r\n        previous\r\n        nextOffset\r\n        prevOffset\r\n        status\r\n        message\r\n        results {\r\n            url\r\n            name\r\n            image\r\n        }\r\n        }\r\n    }\r\n`;","import { useQuery } from '@apollo/client';\r\nimport React, { useState } from \"react\";\r\nimport PageControl from '../components/PageControl';\r\nimport PokeCard from '../components/PokeCard';\r\nimport PokemonCardContainer from '../components/PokemonCardContainer';\r\nimport PokeOwned from '../components/PokeOwned';\r\nimport { GET_POKEMONS_QUERY } from '../graphql/queries/getPokemons';\r\nimport withContext from '../withContext';\r\n\r\n\r\n\r\nfunction PokemonListPageComponent(props) {\r\n    const gqlVariables = {\r\n        limit: 45,\r\n        offset: 0,\r\n    };\r\n\r\n    const { loading, error, data, refetch } = useQuery(GET_POKEMONS_QUERY, { variables: gqlVariables });\r\n    const onNext = (nextOffset) => {\r\n        refetch({ offset: nextOffset});\r\n    };\r\n\r\n    const onPrev = (prevOffset) => {\r\n        refetch({ offset: prevOffset});\r\n    }\r\n    if (loading) return 'Loading...';\r\n    if (error) return `Error! ${error.message}`;\r\n    console.log(data);\r\n    return <>\r\n        <div className=\"d-flex flex-column align-items-center\">\r\n            <h1>\r\n                Pokemon List Page\r\n            </h1>\r\n            <PokeOwned caught={props.context.pokecaught} />\r\n            <PokemonCardContainer className=\"d-flex flex-wrap col-md-8\">\r\n                {data.pokemons.results.map(pokemon => <PokeCard key={pokemon.name} name={pokemon.name} image={pokemon.image} />)}\r\n            </PokemonCardContainer>\r\n            <PageControl\r\n                prev={data.pokemons.prevOffset}\r\n                next={data.pokemons.nextOffset}\r\n                onNext={onNext}\r\n                onPrev={onPrev}\r\n                />\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default withContext(PokemonListPageComponent);","import React from \"react\";\r\nimport PokeCard from \"../components/PokeCard\";\r\nimport PokemonCardContainer from \"../components/PokemonCardContainer\";\r\nimport withContext from \"../withContext\";\r\n\r\nfunction MyPokemonsPage(props) {\r\n  console.log(props.context.pokecaught);  \r\n  \r\n  return <>\r\n    <div className=\"d-flex flex-column align-items-center\">\r\n      <h1>\r\n        My Pokemon Page\r\n      </h1>\r\n      <PokemonCardContainer className=\"d-flex flex-wrap col-md-8\">\r\n        {props.context.pokecaught.map(pokemon => <PokeCard key={pokemon.nickname} name={pokemon.nickname} image={pokemon.image} owned release={props.context.releasePokemon} />)}\r\n      </PokemonCardContainer>\r\n    </div>\r\n  </>\r\n}\r\n\r\nexport default withContext(MyPokemonsPage);","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from '@emotion/styled'\r\n\r\nconst NavBarLink = styled.li`\r\n    padding: 12px;\r\n`;\r\n\r\nexport default function NavBarLinkComponent(props) {\r\n    return (\r\n        <li className=\"nav-item\">\r\n            <Link to={props.to} className=\"navbar-item\" style={{ textDecoration: 'none' }}>\r\n                <NavBarLink>{props.description}</NavBarLink>\r\n            </Link>\r\n        </li>\r\n    );\r\n}","import React from \"react\";\r\nimport { css } from '@emotion/react';\r\nimport NavBarLink from \"./NavBarLink\";\r\n\r\nconst links = [\r\n    { to: '/pokemons', description: 'Pokemon List' },\r\n    { to: '/mypokemons', description: 'My Pokemons' }\r\n];\r\n\r\nexport default function NavBar() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light d-flex justify-content-between\">\r\n            <div className=\"navbar-brand d-flex align-items-center col-md-4\">\r\n                <strong>Pokemon Web Platform</strong>\r\n            </div>\r\n            <ul className=\"navbar-nav\">\r\n                {links.map(link => <NavBarLink to={link.to} description={link.description} />)}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport styled from '@emotion/styled'\r\n\r\nconst CatchPokeButton = styled.button``;\r\nconst PokemonCaughtDialog = styled.div``;\r\n\r\nfunction CatchPokeDialogComponent(props) {\r\n    const [nickname, setNickname] = useState(props.pokemon.name);\r\n\r\n    if (props.catchingPokemon) {\r\n        // catching pokemon, first check if still loading\r\n        if (props.loading) {\r\n            return <>Loading</>\r\n        } else {\r\n            if (props.pokemonCaught) {\r\n                // prompt for nickanme\r\n                // text: Gotcha! x was caught!\r\n                const handleSubmit = (event) => {\r\n                    event.preventDefault();\r\n                    props.submitPokemon({\r\n                        nickname,\r\n                        name: props.pokemon.name,\r\n                        image: props.pokemon.sprites.front_default\r\n                    });\r\n                    setNickname(\"\");\r\n                };\r\n\r\n                return (\r\n                    <>\r\n                        <h3>Gotcha! {props.pokemon.name} was caught!</h3>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <PokemonCaughtDialog class=\"form-group\">\r\n                                <label>Nickname</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={nickname}\r\n                                    onChange={e => setNickname(e.target.value)}\r\n                                    placeholder=\"Enter Pokemon nickname\" />\r\n                                <input type=\"submit\" value=\"Add to my Pokemon List\" />\r\n                            </PokemonCaughtDialog>\r\n                        </form>\r\n                    </>);\r\n            } else {\r\n                // prompt to try again\r\n                // text: Oh, no! The Pokemon broke free!\r\n                return (\r\n                    <>\r\n                        <h3>Oh, no! The Pokemon broke free!</h3>\r\n                        <CatchPokeButton className=\"btn btn-secondary btn-lg\" onClick={() => props.catchPokemon(props.pokemon)}>\r\n                            CATCH AGAIN\r\n                        </CatchPokeButton>\r\n                    </>)\r\n            }\r\n        }\r\n    } else {\r\n        // not catching pokemon just return catch button\r\n        return (\r\n            <CatchPokeButton className=\"btn btn-secondary btn-lg\" onClick={() => props.catchPokemon(props.pokemon)}>\r\n                CATCH\r\n            </CatchPokeButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CatchPokeDialogComponent;","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_POKEMON_QUERY = gql`\r\n    query pokemon($name: String!) {\r\n        pokemon(name: $name) {\r\n            name\r\n    \t\tsprites {\r\n                front_default\r\n            }\r\n        }\r\n    }\r\n`;","import { useQuery } from \"@apollo/client\";\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CatchPokeDialog from \"../components/CatchPokeDialog\";\r\nimport { GET_POKEMON_QUERY } from \"../graphql/queries/getPokemon\";\r\nimport withContext from \"../withContext\";\r\n\r\nfunction PokemonDetailsPageComponent(props) {\r\n    let { name } = useParams();\r\n    const gqlVariables = {\r\n        name\r\n    };\r\n    const { loading, error, data } = useQuery(GET_POKEMON_QUERY, { variables: gqlVariables });\r\n    const [catchingPokemon, setCatchingPokemon] = useState(false);\r\n    const [pokemonCaught, setPokemonCaught] = useState(false);\r\n    const [load, setLoad] = useState(false);\r\n\r\n    const catchPokemon = () => {\r\n        setLoad(true);\r\n        setCatchingPokemon(true);\r\n        if (Math.random() >= 0.5) {\r\n            // success\r\n            setPokemonCaught(true);\r\n        } else {\r\n            // fail\r\n            setPokemonCaught(false);\r\n        }\r\n        setTimeout(() => setLoad(false), 1500);\r\n    }\r\n\r\n    const pokemonCaughtEvent = (pokemon) => {\r\n        setCatchingPokemon(false);\r\n        props.context.catchPokemon(pokemon);\r\n    }\r\n\r\n    if (loading) return 'Loading...';\r\n    if (error) return `Error! ${error.message}`;\r\n    return <>\r\n        <div className=\"d-flex flex-column justify-content-center\">\r\n            <h1 >\r\n                {data.pokemon.name}\r\n            </h1>\r\n            <img width=\"200px\" className=\"align-self-center\" src={data.pokemon.sprites.front_default} />\r\n            <CatchPokeDialog\r\n                loading={load}\r\n                catchingPokemon={catchingPokemon}\r\n                pokemon={data.pokemon}\r\n                catchPokemon={catchPokemon}\r\n                pokemonCaught={pokemonCaught}\r\n                submitPokemon={pokemonCaughtEvent} />\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\nexport default withContext(PokemonDetailsPageComponent);","import React from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Context from \"./Context\";\nimport PokemonListPage from \"../src/pages/PokemonListPage\";\nimport MyPokemonsPage from \"../src/pages/MyPokemonsPage\";\nimport NavBar from \"./components/NavBar\";\nimport PokemonDetailsPage from \"./pages/PokemonDetailsPage\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokecaught: [],\n    };\n    this.routerRef = React.createRef();\n  }\n\n  componentDidMount() {\n    let pokecaught = localStorage.getItem(\"pokecaught\");\n    pokecaught = pokecaught ? JSON.parse(pokecaught) : [];\n    this.setState({ pokecaught });\n  }\n\n  catchPokemon = (pokemon) => {\n    let caught = this.state.pokecaught;\n    caught.push(pokemon);\n    localStorage.setItem(\"pokecaught\", JSON.stringify(caught));\n    this.setState({ pokecaught: caught });\n  }\n\n  releasePokemon = (name) => {\n    let caught = this.state.pokecaught;\n    const filtered = caught.filter(poke => poke.nickname != name);\n    localStorage.setItem(\"pokecaught\", JSON.stringify(filtered));\n    this.setState({ pokecaught: filtered });\n  }\n\n\n  render() {\n    return (\n      <Context.Provider value={{\n        ...this.state,\n        catchPokemon: this.catchPokemon,\n        releasePokemon: this.releasePokemon\n      }}>\n        <Router ref={this.routerRef}>\n          <div className=\"App\">\n            <header>\n              <NavBar />\n            </header>\n            <div className=\"d-flex justify-content-center\">\n              <Switch>\n                <Route exact path=\"/\" component={PokemonListPage} />\n                <Route exact path=\"/mypokemons\" component={MyPokemonsPage} />\n                <Route exact path=\"/pokemons\" component={PokemonListPage} />\n                <Route path=\"/pokemons/:name\" component={PokemonDetailsPage} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Context.Provider >\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    ApolloClient,\r\n    InMemoryCache\r\n} from \"@apollo/client\";\r\n\r\nexport const apolloClient = new ApolloClient({\r\n    uri: 'https://graphql-pokeapi.vercel.app/api/graphql',\r\n    cache: new InMemoryCache()\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { apolloClient } from './apollo/client';\nimport { GET_POKEMONS_QUERY } from './graphql/queries/getPokemons';\nimport {ApolloProvider} from '@apollo/client';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nconst client = apolloClient;\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}