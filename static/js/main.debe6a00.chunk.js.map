{"version":3,"sources":["Context.js","components/PageControl.js","components/PokemonCardContainer.js","withContext.js","components/PokeOwned.js","graphql/queries/getPokemons.js","components/PokeDisplay.js","components/ListPokeCard.js","images/Pokemon-Web.png","pages/PokemonListPage.js","components/MyPokeCard.js","pages/MyPokemonsPage.js","components/NavBarLink.js","images/pokeball.png","components/NavBar.js","components/PokeCatchResult.js","components/__mocks__/CatchPokeDialog.js","components/PokeCatchDialog.js","graphql/queries/getPokemon.js","pages/PokemonDetailsPage.js","App.js","reportWebVitals.js","apollo/client.js","index.js"],"names":["Context","React","createContext","caught","PreviousButton","prev","prevOffset","onPrev","onClick","NextButton","next","nextOffset","onNext","PageControl","changePage","PokemonCardContainer","styled","div","withContext","Wrapped","props","Consumer","context","PokeOwned","PokeOwnedComponent","className","length","GET_POKEMONS_QUERY","gql","PokeName","strong","PokeDisplay","image","name","src","ListPokeCard","ListPokeCardComponent","to","style","textDecoration","Image","img","useQuery","variables","limit","offset","loading","error","data","refetch","message","console","log","logo","pokecaught","pokemons","results","map","pokemon","previous","MyPokeCard","MyPokeCardComponent","release","nickname","owned","releasePokemon","NavBarLink","NavBarLinkComponent","description","links","NavBar","nav","PokeBallLogo","BrandHeading","h1","NavBarComponent","pokeball","link","CatchPokeButton","button","PokemonCaughtDialog","PokeCatchResult","pokemonCaught","submitPokemon","invalidName","retry","useState","setNickname","onSubmit","event","preventDefault","sprites","front_default","class","type","value","onChange","e","target","placeholder","PokeCatchButton","PokeCatchDialogComponent","showCatchResult","catching","catchPokemon","GET_POKEMON_QUERY","gqlVariables","useParams","setShowCatchResult","setPokemonCaught","setCatching","setInvalidName","width","Math","random","setTimeout","find","myPoke","Body","App","state","push","localStorage","setItem","JSON","stringify","setState","filtered","filter","poke","getItem","parse","this","Provider","ref","routerRef","exact","path","component","PokemonListPage","MyPokemonsPage","PokemonDetailsPage","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","apolloClient","ApolloClient","uri","cache","InMemoryCache","client","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.debe6a00.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Context = React.createContext({\r\n    caught: []\r\n});\r\n\r\nexport default Context;","import React from \"react\";\r\n\r\nfunction PreviousButton({ prev, prevOffset, onPrev }) {\r\n    // need to make limit global\r\n    if (prev) {\r\n        return <>\r\n            <button onClick={() => onPrev(prevOffset)}>Previous</button>\r\n        </>;\r\n    }\r\n    return <></>;\r\n}\r\n\r\nfunction NextButton({ next, nextOffset, onNext }) {\r\n    if (next) {\r\n        return <>\r\n            <button onClick={() => onNext(nextOffset)}>Next</button>\r\n        </>;\r\n    }\r\n    return <></>;\r\n}\r\n\r\nexport default function PageControl({ next, prev, nextOffset = 0, prevOffset = 0, changePage }) {\r\n    return (\r\n        <div>\r\n            <PreviousButton prev={prev} prevOffset={prevOffset} onPrev={changePage} />\r\n            <NextButton next={next} nextOffset={nextOffset} onNext={changePage} />\r\n        </div>\r\n    );\r\n}\r\n\r\n","import styled from '@emotion/styled'\r\n\r\nconst PokemonCardContainer = styled.div`\r\n\r\n`;\r\n\r\nexport default PokemonCardContainer;","import React from 'react';\r\nimport Context from './Context';\r\n\r\nconst withContext = Wrapped => {\r\n    return props => {\r\n        return (\r\n            <Context.Consumer>\r\n                {context => <Wrapped {...props} context={context} />}\r\n            </Context.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withContext;","import React from \"react\";\r\nimport withContext from \"../withContext\";\r\nimport styled from '@emotion/styled'\r\n\r\nconst PokeOwned = styled.div`\r\n\r\n`;\r\n\r\nexport default function PokeOwnedComponent({caught = []}) {\r\n    return (\r\n        <PokeOwned className=\"d-flex flex-column align-items-center\">\r\n            <h1>{caught.length}</h1>\r\n            <h2>Owned</h2>\r\n        </PokeOwned>\r\n    );\r\n}","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_POKEMONS_QUERY = gql`\r\n    query pokemons($limit: Int, $offset: Int) {\r\n        pokemons(limit: $limit, offset: $offset) {\r\n        next\r\n        previous\r\n        nextOffset\r\n        prevOffset\r\n        results {\r\n            url\r\n            name\r\n            image\r\n        }\r\n        }\r\n    }\r\n`;","import React from 'react';\r\nimport styled from '@emotion/styled'\r\n\r\nconst PokeName = styled.strong`\r\n    text-align: center;\r\n`\r\n\r\nexport default function PokeDisplay({ image, name }) {\r\n    return (\r\n        <>\r\n            <img src={image} />\r\n            <PokeName>\r\n                {name}\r\n            </PokeName>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'react-router-dom';\r\nimport PokeDisplay from './PokeDisplay';\r\n\r\n\r\nconst ListPokeCard = styled.div`\r\n    padding: 8px\r\n`;\r\n\r\nexport default function ListPokeCardComponent({ image, name }) {\r\n    return (\r\n        <Link to={`pokemons/${name}`} style={{ textDecoration: 'none' }}>\r\n            <ListPokeCard className=\"d-flex flex-column\">\r\n                <PokeDisplay name={name} image={image} />\r\n            </ListPokeCard>\r\n        </Link >\r\n    );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/Pokemon-Web.686fc84d.png\";","import { useQuery } from '@apollo/client';\r\nimport React from \"react\";\r\nimport PageControl from '../components/PageControl';\r\nimport PokemonCardContainer from '../components/PokemonCardContainer';\r\nimport PokeOwned from '../components/PokeOwned';\r\nimport { GET_POKEMONS_QUERY } from '../graphql/queries/getPokemons';\r\nimport withContext from '../withContext';\r\nimport ListPokeCard from '../components/ListPokeCard';\r\nimport styled from '@emotion/styled';\r\nimport logo from '../images/Pokemon-Web.png';\r\n\r\nconst Image = styled.img`\r\n    display: block;\r\n    width: auto;\r\n    height: auto;\r\n    max-width: 100%;\r\n    max-height: 90%;\r\n    margin: 20px auto;\r\n`;\r\n\r\nfunction PokemonListPageComponent(props) {\r\n    const gqlVariables = {\r\n        limit: 45,\r\n        offset: 0,\r\n    };\r\n\r\n    const { loading, error, data, refetch } = useQuery(GET_POKEMONS_QUERY, { variables: gqlVariables });\r\n    const setOffset = (offset) => {\r\n        refetch({ offset });\r\n    };\r\n\r\n    if (loading) return 'Loading...';\r\n    if (error) return `Error! ${error.message}`;\r\n    console.log(data);\r\n    return <>\r\n        <div className=\"d-flex flex-column align-items-center\">\r\n            <Image src={logo} />\r\n            <PokeOwned caught={props.context.pokecaught} />\r\n            <PokemonCardContainer className=\"d-flex flex-wrap col-md-8\">\r\n                {data.pokemons.results.map(pokemon => <ListPokeCard key={pokemon.name} name={pokemon.name} image={pokemon.image} />)}\r\n            </PokemonCardContainer>\r\n            <PageControl\r\n                next={data.pokemons.next}\r\n                prev={data.pokemons.previous}\r\n                prevOffset={data.pokemons.prevOffset}\r\n                nextOffset={data.pokemons.nextOffset}\r\n                changePage={setOffset}\r\n            />\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default withContext(PokemonListPageComponent);","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PokeDisplay from './PokeDisplay';\r\n\r\nconst MyPokeCard = styled.div`\r\n    padding: 8px\r\n`;\r\n\r\nexport default function MyPokeCardComponent({name, image, release}) {\r\n    return (\r\n        <MyPokeCard className=\"d-flex flex-column\">\r\n            <PokeDisplay name={name} image={image}/>\r\n            <button className=\"btn btn-primary\" onClick={() => release(name)}>\r\n                Release\r\n            </button>\r\n        </MyPokeCard>\r\n    );\r\n}","import React from \"react\";\r\nimport MyPokeCard from \"../components/MyPokeCard\";\r\nimport PokemonCardContainer from \"../components/PokemonCardContainer\";\r\nimport withContext from \"../withContext\";\r\n\r\nfunction MyPokemonsPage(props) {\r\n  \r\n  return <>\r\n    <div className=\"d-flex flex-column align-items-center\">\r\n      <h1>\r\n        My Pokemon Page\r\n      </h1>\r\n      <PokemonCardContainer className=\"d-flex flex-wrap col-md-8\">\r\n        {props.context.pokecaught.map(pokemon => <MyPokeCard key={pokemon.nickname} name={pokemon.nickname} image={pokemon.image} owned release={props.context.releasePokemon} />)}\r\n      </PokemonCardContainer>\r\n    </div>\r\n  </>\r\n}\r\n\r\nexport default withContext(MyPokemonsPage);","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from '@emotion/styled'\r\n\r\nconst NavBarLink = styled.div`\r\n    padding: 12px;\r\n`;\r\n\r\nexport default function NavBarLinkComponent({to = \"/\", description = \"Home\"}) {\r\n    return (\r\n        <li className=\"nav-item\">\r\n            <NavBarLink >\r\n                <Link className=\"navbar-item\" to={to} style={{ textDecoration: 'none' }}>\r\n                    {description}\r\n                </Link>\r\n            </NavBarLink>\r\n        </li>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/pokeball.dec3b7c9.png\";","import React from \"react\";\r\nimport NavBarLink from \"./NavBarLink\";\r\nimport styled from '@emotion/styled';\r\nimport pokeball from \"../images/pokeball.png\";\r\n\r\nconst links = [\r\n    { to: '/pokemons', description: 'Pokemon List' },\r\n    { to: '/mypokemons', description: 'My Pokemons' }\r\n];\r\n\r\nconst NavBar = styled.nav`\r\n    margin-bottom: 48px;\r\n    position: fixed; /* Set the navbar to fixed position */\r\n    top: 0; /* Position the navbar at the top of the page */\r\n    width: 100%; /* Full width */\r\n`;\r\n\r\nconst PokeBallLogo = styled.img`\r\n    height: 32px;\r\n    margin: 8px;\r\n`;\r\n\r\nconst BrandHeading = styled.h1`\r\n    height: 24px;\r\n    font-family: Sora;\r\n`;\r\n\r\nexport default function NavBarComponent() {\r\n    return (\r\n        <NavBar className=\"navbar navbar-light bg-light d-flex justify-content-between\">\r\n            <div className=\"navbar-brand d-flex align-items-center col-md-4\">\r\n                <PokeBallLogo src={pokeball} />\r\n                <BrandHeading>PokeWeb</BrandHeading>\r\n            </div>\r\n            <ul className=\"navbar-nav d-flex flex-row\">\r\n                {links.map(link => <NavBarLink key={link.to} to={link.to} description={link.description} />)}\r\n            </ul>\r\n        </NavBar>\r\n    );\r\n}","import { useState } from \"react\";\r\nimport styled from '@emotion/styled'\r\n\r\nconst CatchPokeButton = styled.button``;\r\nconst PokemonCaughtDialog = styled.div``;\r\n\r\nexport default function PokeCatchResult({\r\n    pokemon,\r\n    pokemonCaught = false,\r\n    submitPokemon,\r\n    invalidName = false,\r\n    retry}) {\r\n    const [nickname, setNickname] = useState('');\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        submitPokemon({\r\n            nickname,\r\n            name: pokemon.name,\r\n            image: pokemon.sprites.front_default\r\n        });\r\n        setNickname(\"\");\r\n    };\r\n\r\n    if (pokemonCaught) {\r\n        // prompt for nickanme\r\n        // text: Gotcha! x was caught!\r\n        return (\r\n            <>\r\n                <h3>Gotcha! {pokemon ? pokemon.name : 'Pokemon'} was caught!</h3>\r\n                <form onSubmit={handleSubmit}>\r\n                    <PokemonCaughtDialog class=\"form-group\">\r\n                        {invalidName && (<label>Invalid Name, you already have a pokemon with the same name</label>)}\r\n                        <label>Nickname</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={nickname}\r\n                            onChange={e => setNickname(e.target.value)}\r\n                            placeholder=\"Enter Pokemon nickname\" />\r\n                        <input type=\"submit\" value=\"Add to my Pokemon List\" />\r\n                    </PokemonCaughtDialog>\r\n                </form>\r\n            </>);\r\n    } else {\r\n        // prompt to try again\r\n        // text: Oh, no! The Pokemon broke free!\r\n        return (\r\n            <>\r\n                <h3>Oh, no! The Pokemon broke free!</h3>\r\n                <CatchPokeButton className=\"btn btn-secondary btn-lg\" onClick={retry}>\r\n                    TRY AGAIN\r\n                </CatchPokeButton>\r\n            </>)\r\n    }\r\n}","import React from 'react';\r\nconst CatchPokeDialog = ({\r\n    pokemon,\r\n    submitPokemon\r\n}) => {\r\n    return (\r\n        <div>\r\n            <button onClick={() => submitPokemon(pokemon)} >SubmitPokemon</button>\r\n        </div>\r\n    );\r\n};\r\nexport default CatchPokeDialog;","import React, { useState } from \"react\";\r\nimport PokeCatchResult from \"./PokeCatchResult\";\r\nimport styled from '@emotion/styled'\r\nimport withContext from \"../withContext\";\r\nimport CatchPokeDialog from \"./__mocks__/CatchPokeDialog\";\r\n\r\nconst PokeCatchButton = styled.button``;\r\n\r\nfunction PokeCatchDialogComponent({\r\n    pokemon,\r\n    pokemonCaught = false,\r\n    showCatchResult = false,\r\n    catching,\r\n    invalidName,\r\n    catchPokemon,\r\n    submitPokemon,\r\n}) {\r\n\r\n    if (catching) {\r\n        // this is where pokeball pulse animation would go\r\n        return <>Catching...</>;\r\n    }\r\n\r\n    if (showCatchResult) {\r\n        // pokemon was either caught or not caught\r\n        return <PokeCatchResult pokemon={pokemon} pokemonCaught={pokemonCaught} submitPokemon={submitPokemon} retry={() => catchPokemon(pokemon)} invalidName={invalidName}/>\r\n    } else {\r\n        // initial state, just show catch button\r\n        return (\r\n            <PokeCatchButton className=\"btn btn-secondary btn-lg\" onClick={() => catchPokemon(pokemon)}>\r\n                CATCH\r\n            </PokeCatchButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PokeCatchDialogComponent;","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_POKEMON_QUERY = gql`\r\n    query pokemon($name: String!) {\r\n        pokemon(name: $name) {\r\n            name\r\n    \t\tsprites {\r\n                front_default\r\n            }\r\n        }\r\n    }\r\n`;","import { useQuery } from \"@apollo/client\";\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CatchPokeDialog from \"../components/PokeCatchDialog\";\r\nimport { GET_POKEMON_QUERY } from \"../graphql/queries/getPokemon\";\r\nimport withContext from \"../withContext\";\r\n\r\nfunction PokemonDetailsPageComponent(props) {\r\n    let { name } = useParams();\r\n    const gqlVariables = {\r\n        name\r\n    };\r\n    const { loading, error, data } = useQuery(GET_POKEMON_QUERY, { variables: gqlVariables });\r\n    const [showCatchResult, setShowCatchResult] = useState(false);\r\n    const [pokemonCaught, setPokemonCaught] = useState(false);\r\n    const [catching, setCatching] = useState(false);\r\n    const [invalidName, setInvalidName] = useState(false);\r\n    \r\n    const savePokemon = (pokemon) => {\r\n        if (props.context.pokecaught.find(myPoke => myPoke.nickname === pokemon.nickname)) {\r\n            // name taken\r\n            setInvalidName(true);\r\n        } else {\r\n            setInvalidName(false);\r\n            setPokemonCaught(false);\r\n            setShowCatchResult(false);\r\n            props.context.catchPokemon(pokemon);\r\n        }\r\n    };\r\n\r\n    const catchPokemon = () => {\r\n        setCatching(true);\r\n        setShowCatchResult(true);\r\n        if (Math.random() >= 0.5) {\r\n            // success\r\n            setPokemonCaught(true);\r\n        } else {\r\n            // fail\r\n            setPokemonCaught(false);\r\n        }\r\n        setTimeout(() => setCatching(false), 1000);\r\n    }\r\n\r\n    if (loading) return 'Loading...';\r\n    if (error) return `Error! ${error.message}`;\r\n    return <>\r\n        <div className=\"d-flex flex-column justify-content-center\">\r\n            <h1 >\r\n                {data.pokemon.name}\r\n            </h1>\r\n            <img width=\"200px\" className=\"align-self-center\" src={data.pokemon.sprites.front_default} />\r\n            <CatchPokeDialog\r\n                pokemon={data.pokemon}\r\n                pokemonCaught={pokemonCaught}\r\n                showCatchResult={showCatchResult}\r\n                catching={catching}\r\n                invalidName={invalidName}\r\n                catchPokemon={catchPokemon}\r\n                submitPokemon={savePokemon} />\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default withContext(PokemonDetailsPageComponent);","import React from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Context from \"./Context\";\nimport PokemonListPage from \"../src/pages/PokemonListPage\";\nimport MyPokemonsPage from \"../src/pages/MyPokemonsPage\";\nimport NavBar from \"./components/NavBar\";\nimport PokemonDetailsPage from \"./pages/PokemonDetailsPage\";\nimport styled from '@emotion/styled';\n\nconst Body = styled.div`\n  padding-top: 100px; \n`;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokecaught: [],\n    };\n  }\n\n  componentDidMount() {\n    let pokecaught = localStorage.getItem(\"pokecaught\");\n    pokecaught = pokecaught ? JSON.parse(pokecaught) : [];\n    this.setState({ pokecaught });\n  }\n\n  catchPokemon = (pokemon) => {\n    let caught = this.state.pokecaught;\n    caught.push(pokemon);\n    localStorage.setItem(\"pokecaught\", JSON.stringify(caught));\n    this.setState({ pokecaught: caught });\n  }\n\n  releasePokemon = (name) => {\n    let caught = this.state.pokecaught;\n    const filtered = caught.filter(poke => poke.nickname != name);\n    localStorage.setItem(\"pokecaught\", JSON.stringify(filtered));\n    this.setState({ pokecaught: filtered });\n  }\n\n\n  render() {\n    return (\n      <Context.Provider value={{\n        ...this.state,\n        catchPokemon: this.catchPokemon,\n        releasePokemon: this.releasePokemon\n    }}>\n        <Router ref={this.routerRef}>\n          <Body className=\"App\">\n            <header>\n              <NavBar />\n            </header>\n            <div className=\"container d-flex justify-content-center\">\n              <Switch>\n                <Route exact path=\"/\" component={PokemonListPage} />\n                <Route exact path=\"/mypokemons\" component={MyPokemonsPage} />\n                <Route exact path=\"/pokemons\" component={PokemonListPage} />\n                <Route path=\"/pokemons/:name\" component={PokemonDetailsPage} />\n              </Switch>\n            </div>\n          </Body>\n        </Router>\n      </Context.Provider >\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    ApolloClient,\r\n    InMemoryCache\r\n} from \"@apollo/client\";\r\n\r\nexport const apolloClient = new ApolloClient({\r\n    uri: 'https://graphql-pokeapi.vercel.app/api/graphql',\r\n    cache: new InMemoryCache()\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { apolloClient } from './apollo/client';\nimport { ApolloProvider } from '@apollo/client';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n\nconst client = apolloClient;\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <Router >\n        <App />\n      </Router>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}